#Markdown学习报告  
##优点：
1. 应为是纯文本，所以只要支持Markdown的地方都能获得一样的编辑效果，可以让作者摆脱排版的困扰，专心写作。
2. 操作简单。
##缺点：
1. 需要记一些语法
2. 有些平台不支持Markdown编辑模式
#一、标题
* 在想要设置为标题的文字前面加#来表示
* 一个#是一级标题，二个#是二级标题，以此类推，支持六级标题
* PS:标准语法一般在#后跟个空格再写文字，貌似有些编辑器不加也行
#二、字体
* **加粗**
 要加粗的字体左右分别用两个*号包起来
* *斜体*
 要倾斜的文字左右分别用一个*号包起来
* ***斜体加粗***
 要倾斜和加粗的文字左右分别用三个*号包起来
* ~~删除线~~
 要加删除线的文字左右分别用两个~~号包起来
#三、引用
* 在引用的文字前加>即可。引用也可以嵌套，如加两个>>三个>>>
 n个...
 貌似可以一直加下去，但没神马卵用
#四、分割线
* 三个或三个以上的-或*都可以
***
#五、图片
*  语法：
![图片alt](图片地址"图片title")
#六、超链接
* 语法：
[超链接名](超链接地址"超链接title")
#七、列表
1. ***无序列表***  
***
* 语法：
 无序列表用-+*任何一种都可以，记得符号后面要带一个空格   
***
- 列表内容  
+ 列表内容  
* 列表内容  
***      
2. 有序列表
***
* 语法
 数字加点
***
1.   
2.  
***
* 列表嵌套
  上一级与下一级之间敲三个空格即可
# 八、表格
* 语法：

表头|表头|表头

--|:--:|--:  
内容|内容|内容  
内容|内容|内容
#九、代码
* 语法：
 单行代码：代码之间分别用一个反引号包起来
 '代码内容' 
 代码块：代码之间分别用三个反引号包起来，且两边的反引号单独占一行  
'''  
 int x,y;  
 scanf("  
 printf("  
'''
*十、流程图  
'''flow
st=>start: 开始  
op=>operation: My Operation  
cond=>condition: Yes or No?  
e=>end  
st->op->cond  
cond(yes)->e  
cond(no)->op  
&'''  

